@mixin set_distance_child($vector: row, $distance: null) {
  & > *:not(:last-child) {
    @if ($vector == row){
      margin-right: $distance;
    } @else {
      margin-bottom: $distance;
    }
  }
}


@mixin flex_it($vector: row, $distance: null) {
  display: flex;
  flex-direction: $vector;

  @if ($distance) {
    @include set_distance_child($vector, $distance)
  }
}

@mixin gradient_underline($width) {
  position: relative;
  display: inline;
  &::before {
    content: '';
    height: 2px;
    background: linear-gradient(107.51deg, rgba(255, 226, 159, 0.9) 0%, rgba(255, 169, 159, 0.9) 47.92%, rgba(255, 113, 154, 0.9) 100%);

    @if (#{$width} != #{100%}) {
      left: 50%;
      transform: translateX(-50%);
    }

    width: $width;
    bottom: -7px;
    position: absolute;
  }
}

@mixin gradient_border($width, $height, $border_width, $border_radius:0) {
  display: flex;
  align-items: center;
  justify-content: center;

  min-width: $width;
  width: $width;
  height: $height;
  z-index: 1;
  position: relative;
  background-clip: padding-box;
  border: solid $border_width transparent;

  @if ($border_radius) {
    border-radius: #{$border_radius};
  }

  & > * {
    position: absolute;
    z-index: 3;
  }

  &::before {
    content: '';
    position: absolute;
    top: 0; right: 0; bottom: 0; left: 0;
    z-index: -1;
    margin: -$border_width;
    border-radius: inherit;
    background: linear-gradient(to right, rgb(255, 216, 168), rgb(255,141,165));
  }
  &::after {
    content: '';
    position: relative;
    display: flex;
    min-width: calc(100% - #{$border_width + 1px});
    width: calc(100% - #{$border_width + 1px});
    height: calc(100% - #{$border_width + 1px});
    background-color: $glob-color-bg;
    @if ($border_radius) {
      border-radius: #{$border_radius};
    }
  }
}

@mixin make-figure ($size, $color: currentColor, $border-size: null, $border-color: currentColor, $border-radius: 0) {
  // Создает квадратную/круглую область
  // @param $size   - Равная ширина и высота в пикселях.
  // @param $border-radius - Значение радиуса с размерностью

  width: 100%;
  height: 100%;

  max-width:  #{$size}px;
  max-height: #{$size}px;
  min-width:  #{$size}px;
  min-height: #{$size}px;

  background-color: $color;

  @if $border-size {
    border: $border-size $border-color solid;
    border-radius: $border-radius;
  }
}

@mixin checkmark {
  // Иконка галочки
  content: url('data:image/svg+xml;charset=UTF-8, <svg width="11" height="12" viewBox="0 0 11 12" xmlns="http://www.w3.org/2000/svg"><path d="M2.926 11.616C2.926 11.4947 2.90267 11.434 2.856 11.434L2.534 11.588C2.534 11.5227 2.49667 11.476 2.422 11.448L2.31 11.434C2.23533 11.434 2.142 11.4667 2.03 11.532C2.01133 11.4853 1.988 11.4387 1.96 11.392C1.932 11.3453 1.90867 11.3033 1.89 11.266C1.76867 11.0327 1.64733 10.776 1.526 10.496C1.414 10.2067 1.30667 9.93133 1.204 9.67C1.11067 9.40867 1.036 9.20333 0.98 9.054C0.942667 8.93267 0.900667 8.75067 0.854 8.508C0.807333 8.26533 0.760667 7.95733 0.714 7.584C0.816667 7.64933 0.896 7.682 0.952 7.682C1.01733 7.682 1.078 7.584 1.134 7.388C1.162 7.42533 1.21333 7.444 1.288 7.444C1.344 7.444 1.386 7.42533 1.414 7.388L1.638 7.052L1.89 7.136H1.904C1.92267 7.136 1.94133 7.12667 1.96 7.108C1.97867 7.08933 2.00667 7.07067 2.044 7.052C2.11867 7.00533 2.17467 6.982 2.212 6.982L2.254 6.996C2.48733 7.108 2.63667 7.31333 2.702 7.612C2.87 8.32133 3.038 8.676 3.206 8.676C3.374 8.676 3.57 8.49867 3.794 8.144C3.906 7.96667 4.018 7.76133 4.13 7.528C4.25133 7.29467 4.37267 7.03333 4.494 6.744C4.51267 6.856 4.53133 6.912 4.55 6.912C4.59667 6.912 4.676 6.79533 4.788 6.562C4.90933 6.32867 5.10067 6.00667 5.362 5.596C5.51133 5.344 5.698 5.05933 5.922 4.742C6.15533 4.42467 6.40267 4.098 6.664 3.762C6.92533 3.426 7.17733 3.10867 7.42 2.81C7.672 2.51133 7.896 2.25467 8.092 2.04C8.288 1.82533 8.43267 1.68533 8.526 1.62C8.88067 1.37733 9.16067 1.144 9.366 0.92C9.35667 0.985333 9.34267 1.046 9.324 1.102C9.31467 1.14867 9.31 1.18133 9.31 1.2C9.31 1.23733 9.32867 1.256 9.366 1.256L9.758 1.06V1.116C9.758 1.19067 9.77667 1.228 9.814 1.228C9.842 1.228 9.898 1.186 9.982 1.102C10.066 1.018 10.1127 0.957333 10.122 0.92L10.094 1.116L10.57 0.836L10.458 1.088C10.6073 0.985333 10.7147 0.933999 10.78 0.933999C10.8173 0.933999 10.8453 0.957333 10.864 1.004C10.8827 1.04133 10.892 1.07867 10.892 1.116C10.892 1.172 10.8687 1.23733 10.822 1.312C10.7753 1.38667 10.7147 1.47533 10.64 1.578C10.584 1.65267 10.4907 1.76467 10.36 1.914C10.2387 2.054 10.052 2.264 9.8 2.544C9.548 2.81467 9.212 3.19267 8.792 3.678C8.68 3.79933 8.50733 4.014 8.274 4.322C8.04067 4.62067 7.77467 4.97067 7.476 5.372C7.18667 5.764 6.89733 6.16067 6.608 6.562C6.31867 6.96333 6.062 7.32733 5.838 7.654C5.614 7.97133 5.45533 8.20933 5.362 8.368L4.494 9.838C4.30733 10.1553 4.15333 10.4167 4.032 10.622C3.91067 10.818 3.81733 10.9533 3.752 11.028C3.612 11.196 3.458 11.3453 3.29 11.476L3.164 11.406L3.052 11.476L2.926 11.616Z"/></svg>');
}

@mixin checker ($el: span, $size: 20, $indent: 20, $color: #000) {
  // Шаблон кастомного чекбокса | радио
  // @param $el     - Кастомизирующий элемент
  // @param $size   - Размер чекера
  // @param $indent - Отступ до текста;
  input {
    display: none;

    ~ #{$el} {
      position: relative;
      cursor: pointer;
      margin-left: #{$size}px;
      &::before {
        content: '';
        position: absolute;
        top: 0;
        right: calc(100% + #{$indent}px);
        transition: .15s ease-in;
      }
    }

    &[type="checkbox"] {
      & ~ #{$el}::before {
        @include checkmark;
        @include make-figure(#{$size}, transparent, 1px, currentColor, 4px);
      }
      &:checked ~ #{$el}::before {
        background-color: #{$color};
        border-color: #{$color};
      }
    }

    &[type="radio"] {
      & ~ #{$el}::before {
        @include make-figure(#{$size}, transparent, 1px, currentColor, 50%);
      }
      &:checked ~ span::before {
        border: 6px solid #{$color};
      }

    }
  }
}

@mixin gradientAnimation( $start, $end, $transTime ){
  background-size: 100%;
  background-image: linear-gradient($start, $end);
  position: relative;
  z-index: 100;
  &:before {
    background-image: linear-gradient($end, $start);
    content: "";
    display: block;
    height: 100%;
    position: absolute;
    top: 0; left: 0;
    opacity: 0;
    width: 100%;
    z-index: -100;
    transition: opacity $transTime;
  }
  &:hover {
    &:before {
      opacity: 1;
    }
  }
}

@mixin trans {
  transition: .15s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0 }
  to   { opacity: 1 }
}
@mixin fade-in { animation: fadeIn 350ms ease-in-out both }

@keyframes fadeOut {
  from { opacity: 1 }
  to   { opacity: 0 }
}
@mixin fade-out { animation: fadeOut 350ms ease-in-out both }

@mixin bg-gradient($deg) {
  background: linear-gradient(#{$deg}deg, rgba(255, 226, 159, 0.9) 0%, rgba(255, 169, 159, 0.9) 47.92%, rgba(255, 113, 154, 0.9) 100%);
}
